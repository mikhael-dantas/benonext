datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String            @id @default(uuid())
  username     String
  obs          String
  permissions  Json
  created_at   DateTime
  updated_at   DateTime
  clients      Client[]
  interactions UserInteraction[]
}

model Client {
  id             String          @id @default(uuid())
  name           String
  contact_whats  String
  contact_2      String
  email          String
  address        String
  obs            String
  user_id        String
  client_type    String
  created_by     String
  created_at     DateTime
  updated_at     DateTime
  User           User            @relation(fields: [user_id], references: [id])
  apps           App[]
  devices        Device[]
  payments       Payment[]
  subscriptions  Subscription[]
}

model App {
  id         String         @id @default(uuid())
  client_id  String
  app_name   String
  server     String
  screens    Int
  referrals  Int
  obs        String
  created_by String
  created_at DateTime
  updated_at DateTime
  Client     Client         @relation(fields: [client_id], references: [id])
}

model Device {
  id         String         @id @default(uuid())
  client_id  String
  platform   String
  mac_id     String
  obs        String
  created_by String
  created_at DateTime
  updated_at DateTime
  Client     Client         @relation(fields: [client_id], references: [id])
}

model Payment {
  id                String              @id @default(uuid())
  client_id         String
  expected_value    Float
  paid_value        Float
  total_value       Float
  last_payment_date DateTime
  payment_method    String
  receipt_number    String
  created_by        String
  created_at        DateTime
  updated_at        DateTime
  Client            Client              @relation(fields: [client_id], references: [id])
  subscriptionPayments SubscriptionPayment[]
}

model Subscription {
  id              String         @id @default(uuid())
  client_id       String
  creation_date   DateTime
  duration_months Int
  expiration_date DateTime
  status          String
  obs             String
  created_by      String
  created_at      DateTime
  updated_at      DateTime
  Client          Client         @relation(fields: [client_id], references: [id])
  subscriptionPayments SubscriptionPayment[]
  invoices        Invoice[]
}

model Invoice {
  id             String         @id @default(uuid())
  name           String
  client_id      String
  invoice_date   DateTime
  due_date       DateTime
  total_amount   Float
  status         String
  payment_method String
  receipt_number String
  created_by     String
  created_at     DateTime
  updated_at     DateTime
  Subscription   Subscription   @relation(fields: [client_id], references: [id])
}

model SubscriptionPayment {
  id             String         @id @default(uuid())
  payment_id     String
  subscription_id String
  payment_date   DateTime
  payment_amount Float
  created_by     String
  created_at     DateTime
  updated_at     DateTime
  Payment        Payment        @relation(fields: [payment_id], references: [id])
  Subscription   Subscription   @relation(fields: [subscription_id], references: [id])
}

model Expense {
  id                 String         @id @default(uuid())
  expense_date       DateTime
    expense_amount     Float
  expense_category   String
  expense_description String
  created_by         String
  created_at         DateTime
  updated_at         DateTime
}

model UserInteraction {
  id         String   @id @default(uuid())
  user_id    String
  record_id  String
  table_name String
  action     String
  date       DateTime
  User       User     @relation(fields: [user_id], references: [id])
}
